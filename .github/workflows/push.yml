name: Basic Tests
on: 
  push:
    branches-ignore:
    - master

jobs:
  release-on-push:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 'latest'
    
      - name: Version Check And Build
        run: |
          TAG=`echo "$DRONE_TAG" | sed 's/^v//'`
          echo $TAG
          VERSION_LINE=$(grep -Po "Version:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" $PWD/style.css)
          VERSION=$(echo $VERSION_LINE | grep -Po "\d\d?\.\d\d?\.?\d?\d?.*")
          echo $VERSION
          if [ $TAG != $VERSION ]; then echo "Wrong theme/tag version - version from repo tag is $TAG but theme version from style.css is $THEMEVERSION" && exit 1 ;fi
          grep -q "\[$VERSION\]" $PWD/CHANGELOG.md
          grep -q "\[$VERSION\]" $PWD/CHANGELOG.md
          sudo apt-get update && sudo apt-get install -y zip
          sudo npm install grunt-cli -g --force
          npm install --silent
          grunt
          rm -rf *.yml .drone.yml .g* .j* .n* .v* scss sass node_modules vendor tests Gruntfile.js casper-tests.js package.json *.ruleset.xml nbproject *.rb *.tmp *.map css/*.map *.log Dockerfile
          echo ${{ github.ref }}
          echo ${{ github.event.repository.name }}
          ls -la
          zip -FSr ${{ github.event.repository.name }} ./*

      - name: Check "Tested Up To"
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          CURRENT_WP_VERSION_API=`curl https://api.wordpress.org/core/version-check/1.7/ | jq '.["offers"][0].current'`
          CURRENT_WP_VERSION=`echo "$CURRENT_WP_VERSION_API" | sed 's/"//g'`
          echo $CURRENT_WP_VERSION
          TESTED_UP_TO_WP_VERSION_LINE=$(grep -Po "Tested\ up\ to:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" $PWD/readme.txt)
          TESTED_UP_TO_WP_VERSION=$(echo $TESTED_UP_TO_WP_VERSION_LINE | grep -Po "\d\d?\.\d\d?\.?\d?\d?")
          echo $TESTED_UP_TO_WP_VERSION
          if [ $TESTED_UP_TO_WP_VERSION != $CURRENT_WP_VERSION ]; then echo "Please test with latest WP version - $CURRENT_WP_VERSION instead of $TESTED_UP_TO_WP_VERSION" && exit 1 ;fi

      - name: Codetest - latest PHP
        env:
          PHPCS_DIR: /tmp/phpcs
          WPCS_DIR: /tmp/sniffs/WordPress-Coding-Standards
          PHPCompatibility: /tmp/sniffs/PHPCompatibility
          PHPCompatibilityWP: /tmp/sniffs/PHPCompatibilityWP
          PHPCompatibilityParagonie: /tmp/sniffs/PHPCompatibilityParagonie
        run: |
          git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR
          git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $WPCS_DIR
          git clone -b master --depth 1 https://github.com/wimg/PHPCompatibility.git $PHPCompatibility
          git clone -b master --depth 1 https://github.com/PHPCompatibility/PHPCompatibilityWP.git $PHPCompatibilityWP
          git clone -b master --depth 1 https://github.com/PHPCompatibility/PHPCompatibilityParagonie $PHPCompatibilityParagonie
          $PHPCS_DIR/bin/phpcs --config-set installed_paths $WPCS_DIR,$PHPCompatibility,$PHPCompatibilityWP,$PHPCompatibilityParagonie
          $PHPCS_DIR/bin/phpcs -p -s -v -n . --standard=./phpcs.ruleset.xml --extensions=php --ignore=*/node_modules/*,*/vendor/*,class-tgm-plugin-activation.php,class-media-grabber.php,get-the-image.php
          sudo npm install -g jshint
          jshint .
          php -v
          find -L . -name '*.php' -not -path "*node_modules*" -not -path "*vendor*" -not -path "*php-codesniffer*" -not -path ".*" -print0 | xargs -0 -n 1 -P 4 php -l
          
      - name: Setup PHP 5.6.30
        uses: shivammathur/setup-php@v2
        with:
          php-version: '5.6.30' # min supported wp version -> https://wordpress.org/about/requirements/

      - name: Codetest - PHP 5.6.30
        run: |
          php -v
          find -L . -name '*.php' -not -path "*node_modules*" -not -path "*vendor*" -not -path "*php-codesniffer*" -not -path ".*" -print0 | xargs -0 -n 1 -P 4 php -l
