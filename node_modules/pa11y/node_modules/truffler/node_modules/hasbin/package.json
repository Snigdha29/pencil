{
  "name": "hasbin",
  "version": "1.1.3",
  "description": "Check whether a binary exists in the PATH environment variable",
  "keywords": [
    "bin",
    "check",
    "path"
  ],
  "author": {
    "name": "Nature Publishing Group"
  },
  "contributors": [
    {
      "name": "Rowan Manning",
      "url": "http://rowanmanning.com/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/nature/hasbin.git"
  },
  "homepage": "https://github.com/nature/hasbin",
  "bugs": {
    "url": "https://github.com/nature/hasbin/issues"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10 <=5"
  },
  "dependencies": {
    "async": "~1.5"
  },
  "devDependencies": {
    "istanbul": "~0.3",
    "jscs": "^2",
    "jshint": "^2",
    "mocha": "^2",
    "mockery": "~1.4",
    "proclaim": "^3",
    "sinon": "^1"
  },
  "main": "./lib/hasbin.js",
  "scripts": {
    "test": "make ci"
  },
  "readme": "\nHasBin\n======\n\nCheck whether a binary exists in the `PATH` environment variable.\n\n[![NPM version][shield-npm]][info-npm]\n[![Node.js version support][shield-node]][info-node]\n[![Build status][shield-build]][info-build]\n[![Code coverage][shield-coverage]][info-coverage]\n[![Dependencies][shield-dependencies]][info-dependencies]\n[![MIT licensed][shield-license]][info-license]\n\n```js\nvar hasbin = require('hasbin');\n\n// Check if a binary exists\nhasbin('node', function (result) {\n    // result === true\n});\nhasbin('wtf', function (result) {\n    // result === false\n});\n\n// Check if all binaries exist\nhasbin.all(['node', 'npm'], function (result) {\n    // result === true\n});\n\n// Check if at least one binary exists\nhasbin.some(['node', 'wtf'], function (result) {\n    // result === true\n});\n```\n\n\nTable Of Contents\n-----------------\n\n- [Install](#install)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [License](#license)\n\n\nInstall\n-------\n\nInstall HasBin with [npm][npm]:\n\n```sh\nnpm install hasbin\n```\n\n\nUsage\n-----\n\n### `hasbin(binaryName, callback)`\n\nCheck whether a binary exists on one of the paths in `process.env.PATH`. Calls back with `true` if it does.\n\n```js\n// Arguments\nbinaryName = String\ncallback = Function(Boolean)\n```\n\n```js\n// Example\nhasbin('node', function (result) {\n    // result === true\n});\n```\n\n### `hasbin.sync(binaryName)`\n\nSynchronous `hasbin`.\n\n```js\n// Arguments\nbinaryName = String\nreturn Boolean\n```\n\n```js\n// Example\nresult = hasbin.sync('node');\n```\n\n### `hasbin.all(binaryNames, callback)`\n\nCheck whether all of a set of binaries exist on one of the paths in `process.env.PATH`. Calls back with `true` if all of the binaries do. Aliased as `hasbin.every`.\n\n```js\n// Arguments\nbinaryNames = Array(String)\ncallback = Function(Boolean)\n```\n\n```js\n// Example\nhasbin.all(['node', 'npm'], function (result) {\n    // result === true\n});\n```\n\n### `hasbin.all.sync(binaryNames)`\n\nSynchronous `hasbin.all`. Aliased as `hasbin.every.sync`.\n\n```js\n// Arguments\nbinaryNames = Array(String)\nreturn Boolean\n```\n\n```js\n// Example\nresult = hasbin.all.sync(['node', 'npm']);\n```\n\n### `hasbin.some(binaryNames, callback)`\n\nCheck whether at least one of a set of binaries exists on one of the paths in `process.env.PATH`. Calls back with `true` if at least one of the binaries does. Aliased as `hasbin.any`.\n\n```js\n// Arguments\nbinaryNames = Array(String)\ncallback = Function(Boolean)\n```\n\n```js\n// Example\nhasbin.some(['node', 'npm'], function (result) {\n    // result === true\n});\n```\n\n### `hasbin.some.sync(binaryNames)`\n\nSynchronous `hasbin.some`. Aliased as `hasbin.any.sync`.\n\n```js\n// Arguments\nbinaryNames = Array(String)\nreturn Boolean\n```\n\n```js\n// Example\nresult = hasbin.some.sync(['node', 'npm']);\n```\n\n\nContributing\n------------\n\nTo contribute to HasBin, clone this repo locally and commit your code on a separate branch.\n\nPlease write unit tests for your code, and check that everything works by running the following before opening a pull-request:\n\n```sh\nmake ci\n```\n\n\nLicense\n-------\n\nHasBin is licensed under the [MIT][info-license] license.  \nCopyright &copy; 2015, Nature Publishing Group\n\n\n\n[npm]: https://npmjs.org/\n[info-coverage]: https://coveralls.io/github/nature/hasbin\n[info-dependencies]: https://gemnasium.com/nature/hasbin\n[info-license]: LICENSE\n[info-node]: package.json\n[info-npm]: https://www.npmjs.com/package/hasbin\n[info-build]: https://travis-ci.org/nature/hasbin\n[shield-coverage]: https://img.shields.io/coveralls/nature/hasbin.svg\n[shield-dependencies]: https://img.shields.io/gemnasium/nature/hasbin.svg\n[shield-license]: https://img.shields.io/badge/license-MIT-blue.svg\n[shield-node]: https://img.shields.io/badge/node.js%20support-0.10â€“5-brightgreen.svg\n[shield-npm]: https://img.shields.io/npm/v/hasbin.svg\n[shield-build]: https://img.shields.io/travis/nature/hasbin/master.svg\n",
  "readmeFilename": "README.md",
  "_id": "hasbin@1.1.3",
  "_from": "hasbin@~1.1"
}
